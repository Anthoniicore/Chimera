name: build

# Run manually and each time anything is pushed or a PR is made.
on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  build:
    name: "Build Chimera"
    runs-on: ubuntu-22.04

    steps:
      - name: "Install deps"
        run: |-
          sudo apt-get update
          sudo apt-get install -y software-properties-common gnupg build-essential mingw-w64 cmake python3 p7zip-full curl git zstd

      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Compile"
        env:
          # Enable stack protection
          LDFLAGS: -fstack-protector
        run: |-
          # Make CMake toolchain file
          printf '%s\n' \
            'set(CMAKE_SYSTEM_NAME Windows)' \
            'set(TOOLCHAIN i686-w64-mingw32)' \
            'set(CMAKE_C_COMPILER ${TOOLCHAIN}-gcc-posix)' \
            'set(CMAKE_CXX_COMPILER ${TOOLCHAIN}-g++-posix)' \
            'set(CMAKE_RC_COMPILER ${TOOLCHAIN}-windres)' \
            'set(CMAKE_AR ${TOOLCHAIN}-gcc-ar-posix)' \
            'set(CMAKE_RANLIB ${TOOLCHAIN}-gcc-ranlib-posix)' \
            'set(CMAKE_FIND_ROOT_PATH /usr/${TOOLCHAIN})' \
            'set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)' \
            'set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)' \
            'set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)' \
            'set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)' \
          > toolchain.cmake

          cmake . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake \
            -DCMAKE_INSTALL_PREFIX=build

          cd build
          make -j $(nproc)

      - name: "Package"
        id: package
        run: |-
          7z a -mx=9 chimera.7z LICENSE README.md chimera.ini fonts ./build/strings.dll

      # Upload an artifact if building an untagged commit
      - name: "Upload artifact"
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v3
        with:
          name: chimera-${{ steps.package.outputs.SHA }}
          path: ./chimera.7z
